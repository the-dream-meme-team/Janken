#include <iostream>
#include <iomanip>
#include <string>
#include <cstdlib>
#include <ctime>
#include <fstream>

struct AIstat
{
    int AIwins;
    int AIloss;
    int AIties;
};
struct playerstat
{
    int Pwins;
    int Ploss;
    int  Pties;
    AIstat AIstatistic;
};

using namespace std;

int PlayerDecision(int&);//player decision declared with reference variable
int AIRoll(int);
int AIdirect(int, int);
int Pwin(int,int);
int main()
{
    playerstat statistics[3];
    int AIrandomizer = 0;
    int AIchoice, AIdirection;
    int rounds,RPS = 0,Pdirection;
    int AIDecision, count = 0;
    int Finalwin= 0, Finaloss = 0,FinalA = 0, FinalB = 0;
    char scoreboardnames[3][10] = {"Kekyoin","JOJO","Koichi"};//parallel arrays for later use
    int scoreboardscore[3] = {20,13,4};//parallel arrays for later use
    for(int i = 0; i < 3; i++)\
    {
        statistics[i].AIstatistic.AIwins = 0;
        statistics[i].AIstatistic.AIloss = 0;
        statistics[i].AIstatistic.AIties = 0;
        statistics[i].Pwins= 0;
        statistics[i].Ploss =0;
        statistics[i].Pties = 0;

    }

    // print out all the rules
    cout << "Welcome to Janken! This game is rock-paper-scissors but with a twist!" << endl;
    cout << "The rules of game are you will play 1 game of rock-paper-scissors." << endl;
    cout << "The winner will choose among these directions: Up, Down, Right, and Left." << endl;
    cout << "If the loser chooses the same direction as the player, they get a flick to the forehead." << endl;
    cout << "If the loser chooses the another direction from the player, they will have succesfully dodged." << endl;
    cout << "Now, let's begin!" << endl;
   // the amount of rounds

    for(int j = 0; j< 3; j++)
    {
        cout << "How many rounds of Janken would you like play for game " << j + 1 << "? (Only odd number amount of rounds only!)" << endl;
        cin >> rounds;
        while(rounds % 2 == 0)//Modulous
        {
            cin >> rounds;//scans in count
            if(rounds % 2 == 0) //input validation
                cout << "Please choose a valid amount of rounds, it must be an odd number.";
        }

        // player decision
        cout << "The game will now commence!" << endl;

        for(int i = 0; i < rounds; i++)
        {

            PlayerDecision(RPS);//Calls PlayerDecision
            AIchoice =  AIRoll(AIrandomizer);//calls AIRoll

            if(AIchoice == RPS)
            {
                cout << "Tie" << endl;
                statistics[j].AIstatistic.AIties++;
                statistics[j].Pties++;
            }
            if(AIchoice == 1 && RPS ==2)
            {
                cout << "Player wins" << " AI chose: " << AIchoice << endl;
                statistics[j].AIstatistic.AIloss++;
                statistics[j].Pwins++;
                FinalA =  Pwin(AIdirection,Pdirection);
            }
            if(AIchoice == 2 && RPS ==3)
            {
                cout << "Player wins" << " AI chose: " << AIchoice <<endl;
                statistics[j].AIstatistic.AIloss++;
                statistics[j].Pwins++;
                FinalA =  Pwin(AIdirection,Pdirection);
            }
            if(AIchoice == 3 && RPS ==1)
            {
                cout << "Player wins" << " AI chose: " << AIchoice<< endl;
                statistics[j].AIstatistic.AIloss++;
                statistics[j].Pwins++;
               FinalA =  Pwin(AIdirection,Pdirection);
            }
            if(RPS == 1 &&   AIchoice==2)
            {
                cout << "AI wins having chosen " << AIchoice << endl;
                statistics[j].AIstatistic.AIwins++;
                statistics[j].Ploss++;
                FinalB = AIdirect(AIdirection,Pdirection);
            }
            if(RPS == 2 &&   AIchoice==3)
            {
                cout << "AI wins having chosen " << AIchoice << endl;
                statistics[j].AIstatistic.AIwins++;
                statistics[j].Ploss++;
                FinalB = AIdirect(AIdirection,Pdirection);
            }
            if(RPS == 3 &&   AIchoice==1)
            {
                cout << "AI wins having chosen " << AIchoice << endl;
                statistics[j].AIstatistic.AIwins++;
                statistics[j].Ploss++;
                FinalB = AIdirect(AIdirection,Pdirection);
            }
        }
    }
    for(int i = 0; i < rounds; i++)
        {
            Finalwin = Finalwin + FinalA;
            Finaloss = Finaloss + FinalB;
        }
    ofstream Score;
    Score.open ("finalScore.txt");//opens finalScore as Score
    if(!Score)
    {
        cout << "stupid poopy bunghole";
    }
    cout << "THE RESULTS ARE AGAINST THE AI ARE: " << endl;
    Score << "WINS: " << Finalwin << endl;
    Score << "LOSSES: " << Finaloss << endl;
    Score.close();


}
//*********************************************************************************************************
//*     input: none                                                                                       *
//*     output: none                                                                                      *
//*     description: Gets the player decision and checks for it it to be 1-3                              *
//*********************************************************************************************************
int PlayerDecision(int &RPS)//reference variable
{
        RPS = 0;
        while(RPS <1 || RPS >3)
        {
            cout << "would you like to pick rock(1) Paper(2) or scissors(3)";
            cin >> RPS;//gets player choice
        }
}

//*********************************************************************************************************
//*     input: none                                                                                       *
//*     output: none                                                                                      *
//*     description: Randomizes the AI choice                                                             *
//*********************************************************************************************************
int AIRoll(int AIrand)
{
    for(int i = 0; i<3; i++)
    {
        srand(time(NULL));//gets time
        AIrand = rand() % 3 + 1;//randomizes between 1-3

        return AIrand;//returns AIrand to AIchoice
    }

}

//*********************************************************************************************************************
//*     input: none                                                                                                   *
//*     output: none                                                                                                  *
//*     description: Randomizes the AI choice and gets user choice, if the choices are the same it prints the message *
//*********************************************************************************************************************
int Pwin(int AIdirection,int Pdirection)
{
    Pdirection = 0;
    int returnflick = 0;
    while(Pdirection < 1 || Pdirection > 4)
    {
        cout << endl <<"Choose a direction up(1) left(2) down(3) right(4)";
        cin >> Pdirection;
    }

    for(int i = 0; i<3; i++)
    {
        srand(time(NULL));//gets time
        AIdirection = rand() % 4 + 1;//randomizes between 1-3
        //returns AIrand to AIchoice
    }
    if(AIdirection == Pdirection)
        {
            cout << "Good guessing Player gets to flick the AI ... if you can figure out how" << endl;
            returnflick++;
            return returnflick;
        }
    else
        cout << "No one gets flicked you picked different directions" << endl;


}
//*********************************************************************************************************************
//*     input: none                                                                                                   *
//*     output: none                                                                                                  *
//*     description: Randomizes the AI choice and gets user choice, if the choices are the same it prints the message *
//*********************************************************************************************************************
int AIdirect(int AIdirection, int Pdirection)
{
    int returnflick = 0;
    Pdirection = 0;
    while(Pdirection < 1 || Pdirection > 4)//input validation
    {
        cout << endl <<"Choose a direction up(1) left(2) down(3) right(4)";
        cin >> Pdirection;//gets direction
    }
    for(int i = 0; i<3; i++)
    {
        srand(time(NULL));//gets time
        AIdirection = rand() % 4 + 1;//randomizes between 1-3
        //returns AIrand to AIchoice
    }
     if(AIdirection == Pdirection)
     {
        cout << "Please flick yourself since the computer doesn't have hands "<< endl;
        returnflick ++;
        return returnflick;
     }

    else
        cout << "No one gets flicked you picked different directions" << endl;
}
